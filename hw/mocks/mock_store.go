// Code generated by MockGen. DO NOT EDIT.
// Source: gopl.io/hw/mocks/store (interfaces: MetricsStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "gopl.io/hw/mocks/models"
)

// MockMetricsStorage is a mock of MetricsStorage interface.
type MockMetricsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsStorageMockRecorder
}

// MockMetricsStorageMockRecorder is the mock recorder for MockMetricsStorage.
type MockMetricsStorageMockRecorder struct {
	mock *MockMetricsStorage
}

// NewMockMetricsStorage creates a new mock instance.
func NewMockMetricsStorage(ctrl *gomock.Controller) *MockMetricsStorage {
	mock := &MockMetricsStorage{ctrl: ctrl}
	mock.recorder = &MockMetricsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsStorage) EXPECT() *MockMetricsStorageMockRecorder {
	return m.recorder
}

// PingDB mocks base method.
func (m *MockMetricsStorage) PingDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PingDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// PingDB indicates an expected call of PingDB.
func (mr *MockMetricsStorageMockRecorder) PingDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PingDB", reflect.TypeOf((*MockMetricsStorage)(nil).PingDB))
}

// ReadMetric mocks base method.
func (m *MockMetricsStorage) ReadMetric(arg0 string) (models.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMetric", arg0)
	ret0, _ := ret[0].(models.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadMetric indicates an expected call of ReadMetric.
func (mr *MockMetricsStorageMockRecorder) ReadMetric(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMetric", reflect.TypeOf((*MockMetricsStorage)(nil).ReadMetric), arg0)
}

// ReadMetrics mocks base method.
func (m *MockMetricsStorage) ReadMetrics() []models.Metrics {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadMetrics")
	ret0, _ := ret[0].([]models.Metrics)
	return ret0
}

// ReadMetrics indicates an expected call of ReadMetrics.
func (mr *MockMetricsStorageMockRecorder) ReadMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadMetrics", reflect.TypeOf((*MockMetricsStorage)(nil).ReadMetrics))
}

// SaveMetrics mocks base method.
func (m *MockMetricsStorage) SaveMetrics(arg0 []models.Metrics) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveMetrics", arg0)
}

// SaveMetrics indicates an expected call of SaveMetrics.
func (mr *MockMetricsStorageMockRecorder) SaveMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveMetrics", reflect.TypeOf((*MockMetricsStorage)(nil).SaveMetrics), arg0)
}

// UpdateMetric mocks base method.
func (m *MockMetricsStorage) UpdateMetric(arg0 models.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetric", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetric indicates an expected call of UpdateMetric.
func (mr *MockMetricsStorageMockRecorder) UpdateMetric(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetric", reflect.TypeOf((*MockMetricsStorage)(nil).UpdateMetric), arg0)
}
